generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

enum Frequency {
    daily
    weekly
    monthly
}

enum CompletionStatus {
    completed
    skipped
    failed
}

model TaskCompletion {
    id         String           @id @default(auto()) @map("_id") @db.ObjectId
    task_id    String           @db.ObjectId
    task       Task             @relation(fields: [task_id], references: [id])
    date       DateTime
    status     CompletionStatus @default(completed)
    notes      String?
    created_at DateTime         @default(now())
    updated_at DateTime         @updatedAt

    @@unique([task_id, date])
}

model Task {
    id                String           @id @default(auto()) @map("_id") @db.ObjectId
    name              String
    duration          Int
    order             Int
    routine_id        String           @db.ObjectId
    routine           Routine          @relation(fields: [routine_id], references: [id])
    frequency         Frequency        @default(daily)
    every_frequency   Int              @default(1)
    days_in_frequency Int[]            @default([])
    start_date        DateTime         @default(now())
    end_date          DateTime?
    completions       TaskCompletion[]
    tags              String[]         @default([])
}

enum RoutineTypes {
    recurring
    sop
}

model Routine {
    id          String       @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    icon        String?
    duration    Int?
    tasks       Task[]
    user_id     String // clerk user id
    is_favorite Boolean      @default(false)
    type        RoutineTypes @default(recurring)
}
